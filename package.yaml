name:                di-polysemy
version:             0.1.0.0
github:              "nitros12/di-polysemy"
homepage:            https://github.com/nitros12/di-polysemy
bug-reports:         https://github.com/nitros12/di-polysemy/issues
license:             MIT
license-file:        LICENSE
author:              "Ben Simms"
maintainer:          "ben@bensimms.moe"
copyright:           2020 Ben Simms
category:            Logging
build-type:          Simple
tested-with:         GHC == 8.6.5

extra-source-files:
  - README.md
  - cabal.project

extra-doc-files:
  - README.md

synopsis:           "DI logger wrapped for Polysemy"
# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:        Please see the README on GitHub at <https://github.com/nitros12/di-polysemy>


dependencies:
  - base >= 4.12 && < 5
  - polysemy >= 1.3 && < 2
  - polysemy-plugin >= 0.2 && < 0.3
  - di-core >= 1.0.4 && < 2
  - di-handle >= 1.0.1 && < 2
  - di-df1 >= 1.2 && < 2
  - df1 >= 0.3.2 && < 0.4

library:
  ghc-options:
    - -fplugin=Polysemy.Plugin
    - -Wall
  source-dirs: src

default-extensions:
  - TemplateHaskell
  - RecursiveDo
  - CPP
  - AllowAmbiguousTypes
  - BlockArguments
  - NoMonomorphismRestriction
  - AutoDeriveTypeable
  - BangPatterns
  - BinaryLiterals
  - UndecidableInstances
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DoAndIfThenElse
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - DerivingVia
  - DerivingStrategies
  - GeneralizedNewtypeDeriving
  - StandaloneDeriving
  - DeriveAnyClass
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MonadFailDesugaring
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedStrings
  - OverloadedLabels
  - PartialTypeSignatures
  - PatternGuards
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - TupleSections
  - TypeFamilies
  - TypeSynonymInstances
  - ViewPatterns
  - DuplicateRecordFields
  - TypeOperators
  - TypeApplications
  - RoleAnnotations
  - PatternSynonyms
